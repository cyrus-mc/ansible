# Flow
# 
# 1 - check if already ran
#
# 1 - attempt to download file from S3 (ignore errors: True)
# 2 - stat file, register variable
# 1 - check if file exists
#

# ensure etcd2 is stopped (as it usually starts automatically on CoreOS)
- name: etcd2 stop
  systemd:
    name: etcd2
    state: stopped

# trigger file used to check whether we have bootstrapped before
- stat:
    path: /root/.etcd_bootstrap
  register: etcd_bootstrap

# if we have bootstrapped before, exit
- assert:
    that:
     - etcd_bootstrap.stat.exists == false
    msg: 'etcd bootstrap has already run, exiting to prevent corruption of etcd cluster'

# if we get this far, assume rest will be successfully
- name: touch /root/.etcd.bootstrap
  file:
    path: /root/.etcd_bootstrap
    state: touch

- name: Systemd Drop-In Directory
  file:
    path: /etc/systemd/system/etcd2.service.d
    state: directory
    mode: 0755

- name: S3 download backup (if it exists)
  ignore_errors: True
  s3:
    bucket: smarsh-k8s-dev
    object: /backup.tar.gz2
    dest: /tmp/etcd-backup.tar.gz
    mode: get

- stat:
    path: /tmp/etcd-backup.tar.gz
  register: etcd_backup

- debug:
    msg: "Backup exists"
  when: etcd_backup.stat.exists == True

- name: 20-ansibleinit.conf
  template:
    src: 20-ansibleinit.conf.j2
    dest: /etc/systemd/system/etcd2.service.d/20-ansibleinit.conf
    mode: 0644
  notify:
  - etcd_systemd
  when: etcd_backup.stat.exists == False

#- name: delete current etcd data_dir
#  file:
#    state: absent
#    path: /var/lib/etc2/member

  #- name: extract etcd backup
  #unarchive:
  #  src: /tmp/etcd-backup.tar.gz
  #  dest: /
  #  remote_src: True
  #when: etcd_bootstrap.stat.exists == False

  #- name: Drop-In Directory
  #file:
  #  path: /etc/systemd/system/etcd2.service.d
  #  state: directory
  #  mode: 0755
  #tags: etcd_systemd

  #- name: Drop-In 98-force-new-cluster.conf
  #template:
  #  src: 98-force-new-cluster.conf.j2
  #  dest: /etc/systemd/system/etcd2.service.d/98-force-new-cluster.conf
  #  mode: 0644
  #notify:
  #- etcd_systemd

  #- name: etcd2 start 
  #systemd:
  #  name: etcd2
  #  enabled: yes
  #  state: started

